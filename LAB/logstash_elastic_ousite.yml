apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
data:
  logstash.conf: |-
      input {
        beats {
            port => "5044"
        }
      }
  
      filter {

        # Container logs are received with variable named index_prefix 
        # Since it is in json format, we can decode it via json filter plugin.
        if [index_prefix] == "k8s-logs" {

          if [message] =~ /^\{.*\}$/ {
            json {
              source => "message"
              skip_on_invalid_json => true
            }
          }
          
        }

        # do not expose index_prefix field to kibana
        mutate {
          # @metadata is not exposed outside of Logstash by default.
          add_field => { "[@metadata][index_prefix]" => "%{[kubernetes][labels][app]}-%{index_prefix}-%{+YYYY.MM.dd}" }
          # since we added index_prefix to metadata, we no longer need ["index_prefix"] field.
          remove_field => ["index_prefix"]
        }

      }
  
      output {
        # You can uncomment this line to investigate the generated events by the logstash.
        # stdout { codec => rubydebug }
        elasticsearch {
            hosts => "http://10.84.102.53:9200"
            user => "logk8s"
            password => "123456a!"
            #cacert => '/etc/logstash/certificates/ca.crt'
            template_overwrite => false
            manage_template => false
            # The events will be stored in elasticsearch under previously defined index_prefix value.  
            index => "%{[@metadata][index_prefix]}"
            sniffing => false
        }
      }
  logstash.yml: |-
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
    # xpack.monitoring.enabled: false         

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: logstash
spec:
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      hostname: logstash
      containers:
      - name: logstash
        ports:      
          - containerPort: 5044
            name: logstash
        image: docker.elastic.co/logstash/logstash:8.7.0
        # env:
        # - name: ES_HOSTS
        #   value: "https://elasticsearch-es-http:9200"
        # - name: ES_USER
        #   value: "elastic"
        # - name: ES_PASSWORD        
        volumeMounts:
        - name: config
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
          readOnly: true
        - name: pipeline
          mountPath: /usr/share/logstash/pipeline
          readOnly: true 
#        - name: cert-ca
#          mountPath: "/etc/logstash/certificates"
#          readOnly: true

      volumes:
      # Previously defined ConfigMap object.
      - name: pipeline
        configMap:
          name: logstash-config
          items:
          - key: logstash.conf
            path: logstash.conf
      - name: config
        configMap:
          name: logstash-config
          items:
          - key: logstash.yml
            path: logstash.yml
#      - name: cert-ca
#        secret:
#          secretName: elasticsearch-master-certs
---
kind: Service
apiVersion: v1
metadata:
  name: logstash
spec:
  type: ClusterIP
  selector:
    app: logstash
  ports:  
  - protocol: TCP
    port: 5044
    targetPort: 5044
    name: logstash
---